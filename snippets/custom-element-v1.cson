'.source.js':
  'custom-element-v1':
      'prefix': 'cel'
      'body': '\'use strict\';\n
      class ${5:MyElement} extends ${4:HTMLElement} {\n\t
        static get is() {
          return \'${3:my-element}\';
        }\n\t
        // attributes to observe
        static get observedAttributes() {
          return [];
        }\n\t
        constructor() {\n\t\t
          super();\n\t\t
          ${2:this.shadowRoot = this.attachShadow({mode: \'open\'});\n\t\t}
          ${1:// @template}\n\t
          $0\n\t
        }\n\t
        attributeChangedCallback(name, old, value) {\n\t\t
          console.log(name, old, value);\n\t
        }
      \n}\n
      customElements.define(${5:MyElement}.is, ${5:MyElement})'
